From 4d1741908a1e55d0a4e10400feedf4ea4904713c Mon Sep 17 00:00:00 2001
From: user1 <cicadax31@gmail.com>
Date: Tue, 20 Feb 2024 16:09:39 +0900
Subject: [PATCH] 240220_Servlet

---
 .gitignore                                    | 101 +++++++++++++
 Servlet2/src/main/webapp/index.html           |  19 +++
 .../servlet/controller/ExampleServlet1.java   |  81 ++++++++++
 .../servlet/controller/ExampleServlet2.java   | 143 ++++++++++++++++++
 Sevlet1/src/main/webapp/WEB-INF/web.xml       |  34 +++++
 Sevlet1/src/main/webapp/index.html            |  83 ++++++++++
 6 files changed, 461 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 Servlet2/src/main/webapp/index.html
 create mode 100644 Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet1.java
 create mode 100644 Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet2.java
 create mode 100644 Sevlet1/src/main/webapp/WEB-INF/web.xml
 create mode 100644 Sevlet1/src/main/webapp/index.html

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..30c5425
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,101 @@
+# Created by https://www.toptal.com/developers/gitignore/api/java,eclipse
+# Edit at https://www.toptal.com/developers/gitignore?templates=java,eclipse
+
+.classpath
+.project
+Servers
+META-INF
+
+### Eclipse ###
+.metadata
+bin/
+tmp/
+*.tmp
+*.bak
+*.swp
+*~.nib
+local.properties
+.settings/
+.loadpath
+.recommenders
+
+# External tool builders
+.externalToolBuilders/
+
+# Locally stored "Eclipse launch configurations"
+*.launch
+
+# PyDev specific (Python IDE for Eclipse)
+*.pydevproject
+
+# CDT-specific (C/C++ Development Tooling)
+.cproject
+
+# CDT- autotools
+.autotools
+
+# Java annotation processor (APT)
+.factorypath
+
+# PDT-specific (PHP Development Tools)
+.buildpath
+
+# sbteclipse plugin
+.target
+
+# Tern plugin
+.tern-project
+
+# TeXlipse plugin
+.texlipse
+
+# STS (Spring Tool Suite)
+.springBeans
+
+# Code Recommenders
+.recommenders/
+
+# Annotation Processing
+.apt_generated/
+.apt_generated_test/
+
+# Scala IDE specific (Scala & Java development for Eclipse)
+.cache-main
+.scala_dependencies
+.worksheet
+
+# Uncomment this line if you wish to ignore the project description file.
+# Typically, this file would be tracked if it contains build/dependency configurations:
+#.project
+
+### Eclipse Patch ###
+# Spring Boot Tooling
+.sts4-cache/
+
+### Java ###
+# Compiled class file
+*.class
+
+# Log file
+*.log
+
+# BlueJ files
+*.ctxt
+
+# Mobile Tools for Java (J2ME)
+.mtj.tmp/
+
+# Package Files #
+*.jar
+*.war
+*.nar
+*.ear
+*.zip
+*.tar.gz
+*.rar
+
+# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
+hs_err_pid*
+replay_pid*
+
+# End of https://www.toptal.com/developers/gitignore/api/java,eclipse
diff --git a/Servlet2/src/main/webapp/index.html b/Servlet2/src/main/webapp/index.html
new file mode 100644
index 0000000..fce52ee
--- /dev/null
+++ b/Servlet2/src/main/webapp/index.html
@@ -0,0 +1,19 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>Servlet 복습 프로젝트</title>
+</head>
+<body>
+    
+    <h1> Servlet 복습 프로젝트</h1>
+
+    <!-- 피자 주문 요청 - 영수증 응답 -->
+
+    <form action="/ex1" method="get">
+
+        
+    </form>
+</body>
+</html>
\ No newline at end of file
diff --git a/Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet1.java b/Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet1.java
new file mode 100644
index 0000000..def6986
--- /dev/null
+++ b/Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet1.java
@@ -0,0 +1,81 @@
+package edu.kh.servlet.controller;
+
+import java.io.IOException;
+import java.io.PrintWriter;
+
+import jakarta.servlet.ServletException;
+import jakarta.servlet.http.HttpServlet;
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpServletResponse;
+
+public class ExampleServlet1 extends HttpServlet{
+	
+	// GET 방식 요청을 처리하는 메서드 (method="GET" 인 form 태그 제출)
+	@Override
+	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
+		
+		/* ** 매개 변수 req, resp ** */
+		
+//		[HttpServletRequest] 클라이언트 요청시 자동 생성되는 객체,
+//			요청시 전달된 데이터, 요청한 클라이언트 정보, 요청을 유연하게 처리하기 위한 객체 등을 제공 
+		
+//		[HttpServletResponse] 클라이언트 요청시 자동 생성되는 객체,
+//			서버가 클라이언트에게 응답할 수 있는 방법을 제공 (서버 -> 클라이언트 출력 스트림(PrintWriter))
+		
+		
+		// 요청시 같이 제출된 이름, 나이 얻어오기 (제출된 이름, 나이 == 전달인자(Parameter) == 전달된 값)
+		
+		/* 요청에 담긴 특정 Parameter 얻어오기 */
+//		- String HttpServletRequest.getParameter("name속성값")
+		
+		// <input name="inputName">에 작성되어 제출된 값 얻어오기, String으로만 전송
+		String inputName = req.getParameter("inputName");
+		String inputAge = req.getParameter("inputAge");
+		
+		System.out.println("[서버] /ex1 요청을 받음");
+		
+		System.out.println("전달 받은 inputName : " + inputName);
+		System.out.println("전달 받은 inputAge : " + inputAge);
+		
+		// --------------
+		
+		/* 응답 처리 */
+/*		
+		서버(현재 프로젝트)   -> 클라이언트(브라우저) 
+		HTML 코드(문서) 출력  -> 출력 받은 HTML 코드를 해석해서 화면 구성
+	
+		1) 응답하는 문서(데이터)의 형식과 문자 인코딩 지정
+		2) 출력용 스트림 얻어오기
+		3) 스트림을 이용해서 HTML 코드 출력하기
+*/		
+		
+		// 1) 응답하는 문서(데이터)의 형식과 문자 인코딩 지정
+		resp.setContentType("text/html; charset=utf-8");
+		
+		// 2) 출력용 스트림 얻어오기
+		PrintWriter out = resp.getWriter();
+		
+		// 3) 스트림을 이용해서 HTML 코드 출력하기
+		StringBuilder sb = new StringBuilder();
+		
+		sb.append("<!DOCTYPE html>");
+		sb.append("<html>");
+		
+		sb.append("<head>");
+		sb.append("<title> /ex1 응답 페이지 </title>");
+		sb.append("</head>");
+		
+		sb.append("<body>");
+		sb.append(String.format("<h1> %s님의 나이는 %s입니다. </h1>", inputName, inputAge));
+		sb.append("</body>");
+		
+		sb.append("</html>");
+		
+		// sb에 누적된 html 코드 스트림을 이용해서 출력
+		out.print(sb.toString());
+		
+	}
+	
+
+	
+}
diff --git a/Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet2.java b/Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet2.java
new file mode 100644
index 0000000..56d8174
--- /dev/null
+++ b/Sevlet1/src/main/java/edu/kh/servlet/controller/ExampleServlet2.java
@@ -0,0 +1,143 @@
+package edu.kh.servlet.controller;
+
+import java.io.IOException;
+import java.io.PrintWriter;
+
+import jakarta.servlet.ServletException;
+import jakarta.servlet.annotation.WebServlet;
+
+/* 		[Servlet 작성 순서]
+ * 
+ * 1) HttpServlet 상속 받기
+ * 2) @WebServlet() 어노테이선 작성
+ * 3) doGet() 또는 doPost() 오버라이딩 -> 요청 method에 따라 수행
+ * 4) 필요한 로직 처리 : 파라미터 얻어오기, 필요한 요청 처리 구문 작성
+ * 5) 응답 형태 지정 + 응답 스트림 얻어오기
+ * 6) 스트림을 통해서 응답 데이터(html 코드) 출력하기
+ * 
+ * 
+ * */
+
+import jakarta.servlet.http.HttpServlet;
+import jakarta.servlet.http.HttpServletRequest;
+import jakarta.servlet.http.HttpServletResponse;
+
+// @WebServlet() 어노테이선 작성
+@WebServlet("/ex2")
+
+// @WebServlet() : <servlet>, <servlet-mapping> 태그를 컴파일시 추가하라는 어노테이션
+// 	ㄴ 현재 클래스를 Servlet으로 등록 -> <servlet>
+//	ㄴ 등록된 servlet과 () 내 요청 주소 매핑 -> <servlet-mapping>
+
+public class ExampleServlet2 extends HttpServlet{ // 1) HttpServlet 상속 받기
+
+	@Override
+	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
+		
+		// 파라미터 얻어오기
+		String chicken = req.getParameter("chicken"); // 치킨
+		String type = req.getParameter("type"); // 뼈/순살
+		String ordererName = req.getParameter("ordererName"); // 주문자명
+		String ordererAddress = req.getParameter("ordererAddress"); // 주문자 주소
+		
+		// String[] req.getParameterValues("name속성값")
+//			ㄴ같은 name 속성값을 가지는 모든 값을 모두 모아 하나의 String[]로 만들어 반환하는 메서드
+		String[] options = req.getParameterValues("opt");
+		
+		// 선택X -> null / 하나라도 선택시 String[] 반환
+		
+		
+		System.out.println("[서버] /ex2 요청됨");
+		
+		// --------
+		
+		// 선택한 치킨, 뼈/순살, 옵션에 따라 달라지는 가격 계산하기
+		
+		int price = 0;
+		
+		switch(chicken){
+		case "후라이드" : price += 10000; break;
+		case "양념" : price += 11000; break;
+		
+		case "마늘" :
+		case "간장" : price += 12000; break;
+		}
+		
+		// 순살인 경우
+		if (type.equals("boneless")) price += 2000;
+		
+		// 선택된 옵션이 있을 경우 (<~선택이 하나도 없을 경우 null값 반환을 이용)
+		if(options != null) {
+			
+			for(String opt : options) { // 순차접근
+				
+				switch(opt) {
+				case "치킨무" : price += 500; break;
+				case "콜라" : price += 2000; break;
+				case "치즈볼" : price += 3000; break;
+				
+				}
+			}
+		}
+		// price 계산 끝
+		
+		// ---------------
+		
+		// 5) 응답 형태 지정 + 응답 스트림 얻어오기
+		
+		// 응답 형태 지정
+		resp.setContentType("text/html; charset=utf-8");
+		
+		// 응답 스트링 얻어오기
+		PrintWriter out = resp.getWriter();
+		
+		
+		StringBuilder sb = new StringBuilder();
+		
+		sb.append("<!DOCTYPE html>");
+		sb.append("<html>");
+		
+		sb.append("<head>");
+		sb.append("<title>");
+		sb.append(String.format("%s 님 주문 영수증", ordererName));
+		sb.append("</title>");
+		sb.append("</head>");
+		
+		sb.append("<body>");
+		
+		sb.append("<h3>");
+		sb.append("주문자명 : ");
+		sb.append(ordererName);
+		sb.append("</h3>");
+		
+		sb.append(String.format("<h3>주소 : %s</h3>", ordererAddress));
+		
+		sb.append("<ul>");
+		sb.append(String.format("<li>치킨 : %s</li>", chicken));
+		
+		String temp = type.equals("bone") ? "뼈" : "순살";
+		
+		sb.append(String.format("<li>뼈 순살 : %s</li>", temp));
+		
+		if(options != null) { // 선택한 옵션이 있을 경우
+			sb.append("<li>");
+			sb.append("선택한 옵션 : ");
+			
+			for( String opt : options) sb.append(opt +  " ");
+			
+			sb.append("</li>");
+		}
+		
+		sb.append("</ul>");
+		
+		sb.append(String.format("<h3>금액 : %d원</h3>", price));
+		
+		sb.append("</body>");
+		
+		sb.append("</html>");
+		
+		out.print(sb.toString());
+	}
+	
+	
+}
diff --git a/Sevlet1/src/main/webapp/WEB-INF/web.xml b/Sevlet1/src/main/webapp/WEB-INF/web.xml
new file mode 100644
index 0000000..57f2f77
--- /dev/null
+++ b/Sevlet1/src/main/webapp/WEB-INF/web.xml
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd" id="WebApp_ID" version="6.0">
+  <display-name>Sevlet1</display-name>
+  <welcome-file-list>
+    <welcome-file>index.html</welcome-file>
+    <welcome-file>index.jsp</welcome-file>
+    <welcome-file>index.htm</welcome-file>
+    <welcome-file>default.html</welcome-file>
+    <welcome-file>default.jsp</welcome-file>
+    <welcome-file>default.htm</welcome-file>
+  </welcome-file-list>
+  
+  <!-- web.xml: 배포 서술자
+  	- 프로젝트 배포(Run on Server 실행)시 적용할 설정을 작성하는 xml 파일
+  	
+  	- 메인 페이지 지정, 요청 주소 - Servlet 클래스 매핑
+   -->
+   
+   <!-- 특정 클래스를 Servlet 으로 지정 -> Server 실행시 자동으로 객체로 생성됨 -->
+
+	<servlet>
+		<servlet-name>example1</servlet-name>
+		<servlet-class>edu.kh.servlet.controller.ExampleServlet1</servlet-class>
+	</servlet>
+	
+	<!-- 등록된 Servlet 과 요청 주소 매핑하기 -->
+	
+	<servlet-mapping>
+		<servlet-name>example1</servlet-name>
+		<url-pattern>/ex1</url-pattern>
+		
+	</servlet-mapping>
+  
+</web-app>
\ No newline at end of file
diff --git a/Sevlet1/src/main/webapp/index.html b/Sevlet1/src/main/webapp/index.html
new file mode 100644
index 0000000..7b05b30
--- /dev/null
+++ b/Sevlet1/src/main/webapp/index.html
@@ -0,0 +1,83 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1.0">
+    <title>Servlet Project</title>
+</head>
+<body>
+    <h1>페이지</h1>
+
+    <h1>index.html 파일은 메인 페이지 역할을 합니다.</h1>
+    (확인은 web.xml)
+
+    <hr>
+
+    <h1>서버 요청 + 제출 테스트 1</h1>
+
+    <pre>
+        - 이름, 나이를 입력 받아 서버로 제출
+        - *** 준비물 (선수 지식) ***
+
+        1) input 태그 : 값을 입력할 수 있는 양식을 제공하는 태그
+            * name 속성 : input 태그의 값(value)가 서버로 제출 될 때 Key 역할을 하는 속성
+            * value 속성 또는 작성된 값 : 서버로 제출되는 값
+        
+        2) form 태그 : 내부에 작성된 입력값(input)을 지정된 경로로 제출
+            - 지정된 경로 : 다른 html 경로, 서버(Java Servlet) 요청 주소
+            * action 속성 : 제출할 경로 또는 주소를 작성하는 속성
+            * method 속성 : 제출 방식을 지정하는 속성(기본값 : GET)
+    </pre>
+
+    <!-- form 태그 제출시 내부 input에 작성된 값을 /ex1 요청을 처리하는 서버(Servlet)으로 제출(GET 방식) -->
+    <form action="/ex1" method="get">
+        이름 : <input type="text" name="inputName"><br>
+
+        나이 : <input type="text" name="inputAge"><br>
+
+        <button type="submit">제출하기(== 서버 요청하기)</button>
+
+    </form>
+
+    <hr><hr>
+
+    <h1>서버 요청 + 제출 테스트2</h1>
+
+    <form action="/ex2" method="GET">
+
+        <h3>치킨 주문하기</h3>
+
+        치킨 선택 : 
+         <select name="chicken">
+            <option value="후라이드 ">후라이드(10000)</option> <!-- value값 생략시 태그안의 내용을 자동으로 value로 인식 -->
+            <option value="양념">양념 (11000)</option>
+            <option value="마늘">마늘 (12000)</option>
+            <option value="간장">간장 (12000)</option>
+         </select>
+
+         <br>
+
+         뼈/순살 :
+         뼈 <input type="radio" name="type" value="bone"> /
+         순살 (+2000)<input type="radio" name="type" value="boneless">
+
+         <br>
+
+         기타 옵션 : <br>
+         <input type="checkbox" name="opt" value="치킨무">
+         치킨 무 추가 (+500)
+         <br>
+         <input type="checkbox" name="opt" value="콜라">
+         콜라 추가 (+2000)
+         <br>
+         <input type="checkbox" name="opt" value="치즈볼">
+         치즈볼 추가 (+3000)
+         <br>
+         주문자명 : <input type="text" name="ordererName"><br>
+         주소 : <input type="text" name="ordererAddress" size="50"><br>
+
+         <button type="submit"> 주문하기</button>
+    </form>
+
+</body>
+</html>
\ No newline at end of file
-- 
2.43.0.windows.1

